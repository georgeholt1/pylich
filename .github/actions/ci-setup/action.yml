name: CI setup
description: 'Set up the CI environment for the repository'

inputs:
  python-version:
    description: 'The version of Python to use'
    required: true
    default: '3.x'

runs:
  using: composite
  steps:
    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}


    - name: Install pipx
      run: |
        sudo apt install pipx
        pipx ensurepath
      shell: bash

    - name: Read Poetry Version
      id: read-poetry-version
      run: |
        poetry_version=$(cat .github/actions/ci-setup/config.yml | grep poetry_version | awk '{print $2}')
        echo "poetry_version=$poetry_version" >> $GITHUB_ENV
      shell: bash

    - name: Cache Poetry
      id: cache-poetry
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: ${{ runner.os }}-poetry-${{ env.poetry_version }}

    - name: Install poetry
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      run: pipx install poetry==${{ env.poetry_version }}
      shell: bash

    - name: Configure Poetry
      run: poetry config virtualenvs.in-project true
      shell: bash

    - name: Set python version
      run: poetry env use python
      shell: bash

    - name: Cache Poetry Dependencies
      id: cache-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.local
          **/poetry.lock
          .venv
        key: ${{ runner.os }}-poetry-dependencies-${{ hashFiles('**/pyproject.toml') }}

    - name: Install dependencies
      if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install
      shell: bash